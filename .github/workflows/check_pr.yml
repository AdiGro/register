name: Check JSON on PR
on:
  pull_request_target:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write
  issues: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Get list of changed files
        run: echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.event.pull_request.head.sha }})"
        id: getfiles
      - name: validate each changed JSON file
        run: |
          for file in ${{ steps.getfiles.outputs.files }}
          do
            if [[ $file == 'domains/'*'.json' ]]; then
                echo "Validating $file"
                json-yaml-validate $file domain-schema.json # validate here
            fi
          done
      - name: Comment on PR if Invalid
        if: ${{ steps.json-yaml-validate.outcome == 'failure' }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "❌ Your JSON file is invalid, please check the template again!"
            });
      - name: Comment on PR if Valid
        if: ${{ steps.json-yaml-validate.outcome == 'success' }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "✅ Your JSON file is valid!"
            });
